name: Docker Build and Push

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      repo-user:
        required: true
        type: string
      repo-name:
        required: true
        type: string
    secrets:
      user:
        required: true
      pass:
        required: true
      token:
        required: true


jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install
      
    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.user }} -p ${{ secrets.pass }}
      
    - name: Build Docker image
      run: docker build -t ${{ inputs.repo-user }}/hello-world:${{ inputs.tag }} .

    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
      
    - name: Push Docker image to Docker Hub
      run: docker push ${{ inputs.repo-user }}/hello-world:${{ inputs.tag }}

    - name: Create repo content
      run: |
        mkdir -p content/.github/workflows && cat <<EOF > content/.github/workflows/mipipeline.yaml
        name: Hello Image CI pipeline
        on:
          push:
            branches:
              - main
        
        jobs:
          build-and-push:
            uses: CrisisCor/templates/.github/workflows/build-and-push.yml@main
            with:
              tag: "latest"
              repo-user: "crisiscor"
              repo-name: "Microservice-back-01"
            secrets:
              user: xxxxxxxxxxxxxxxxxxxxxxxxxxx
              pass: xxxxxxxxxxxxxxxxxxxxxxxxxxx
              token: xxxxxxxxxxxxxxxxxxxxxxxxx
        EOF
      
    - name: zipping
      run: cd content && zip -r content.zip .github

    - name: Pushes workflow file
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.token }}
      with:
        source_file: 'content/.github/workflows/mipipeline.yaml'
        destination_repo: 'CrisisCor/Microservice-back-06'
        destination_folder: '.github/workflows'
        user_email: 'example@email.com'
        user_name: 'CrisisCor'
        commit_message: 'A custom message for the commit' 
      
    #- uses: howlowck/create-repo-action@v1.0
    #  with:
    #    zipPath: 'content/content.zip'
    #    repoName: 'microservice-repository'
    #    repoVisibility: 'public'
    #    securityToken: ${{ secrets.token }}

